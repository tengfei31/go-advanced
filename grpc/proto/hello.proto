syntax = "proto3";

//`go env GOMODCACHE`/github.com/mwitkow/go-proto-validators@v0.3.2
import "validator.proto";
//`go env GOMODCACHE`/github.com/grpc-ecosystem/grpc-gateway@v1.16.0/third_party/googleapis
import "google/api/annotations.proto";

package proto;

option go_package = "./proto";

/**
protoc -I`go env GOMODCACHE` \
  -I`go env GOMODCACHE`/github.com/mwitkow/go-proto-validators@v0.3.2 \
  -I./proto -I`go env GOMODCACHE`/github.com/grpc-ecosystem/grpc-gateway@v1.16.0/third_party/googleapis  \
  //--swagger_out=. \
  --govalidators_out=. --grpc-gateway_out=.  \
  --go_out=plugins=grpc:. ./proto/hello.proto
 */

message String {
  string value = 1;
}

service HelloService {
  rpc Hello (String) returns (String);

  rpc Channel (stream String) returns (stream String);
}

service PubsubService {
  rpc Publish (String) returns (String);
  rpc Subscribe (String) returns (stream String);
}

message Message {
  string important_string = 1 [
    (validator.field) = {regex: "^[a-z]{2,5}$"}
  ];
  int32 age = 2 [
    (validator.field) = {int_gt: 0, int_lt: 100}
  ];
}

message StringMessage {
  string value = 1;
}

service RestService {
  rpc Get(StringMessage) returns (StringMessage) {
    option (google.api.http) = {
      get: "/get/{value}"
    };
  }
  rpc Post(StringMessage) returns (StringMessage) {
    option (google.api.http) = {
      post: "/post"
      body: "*"
    };
  }
}

